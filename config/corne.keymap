/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define DVO 0
#define QWE 1
#define NUM 2
#define SYM 3
#define FUN 4
#define NAV 5

&mt {
    tapping-term-ms = <150>;
};

/ {
  behaviors {
    // Deprecated
    am: alpha_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "ALPHA_MT";
      #binding-cells = <2>;
      tapping-term-ms = <170>;
      quick-tap-ms = <200>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    // Deprecated
    as: alpha_shift {
      compatible = "zmk,behavior-hold-tap";
      label = "ALPHA_SFT";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <200>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
    };

    lm: left_hand_positional_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "LEFT_POSITIONAL_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "tap-unless-interrupted";
      tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
      quick-tap-ms = <200>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41>;    // <---[[right-hand keys]]
    };

    rm: right_hand_positional_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "LEFT_POSITIONAL_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "tap-unless-interrupted";
      tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
      quick-tap-ms = <200>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38>;    // <---[[left-hand keys]]
    };

    cwl: caps_word_lock {
      compatible = "zmk,behavior-tap-dance";
      label = "CAPS_WORD_LOCK";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&caps_word>, <&kp CAPSLOCK>;
    };

    lt: layer_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "LAYER_TAP";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
      quick-tap-ms = <200>;
      bindings = <&mo>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    dvorak {
      bindings = <
      //       ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &trans   &kp APOS      &kp COMMA     &kp DOT       &kp P         &kp Y             &kp F         &kp G         &kp C         &kp R         &kp L         &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &lm LSHIFT A  &lm LALT O    &lm LGUI E    &lm LCTRL U   &kp I             &kp D         &rm RCTRL H   &rm RGUI T    &rm LALT N    &rm RSHIFT S  &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &lm LSHIFT SEMI &lm LALT Q  &lm LGUI J    &lm LCTRL K   &kp X             &kp B         &rm RCTRL M   &rm RGUI W    &rm LALT V    &rm RSHIFT Z  &trans
      //       ╰───────────────────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬───────────────────────────╯
                                             &mt LGUI TAB  &lt SYM ESC   &lt NAV SPACE     &lt FUN RET   &lt NUM BSPC  &mt RALT DEL
      //                                   ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    qwerty {
      bindings = <
      //       ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &trans   &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P         &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &lm LSHIFT A  &lm LALT S    &lm LGUI D    &lm LCTRL F   &kp G             &kp H         &rm RCTRL J   &rm RGUI K    &rm LALT L    &rm RSHIFT SEMI  &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &lm LSHIFT Z &lm LALT X     &lm LGUI C    &lm LCTRL V   &kp B             &kp N         &rm RCTRL M   &rm RGUI COMMA &rm LALT DOT &rm RSHIFT SLASH  &trans
      //       ╰───────────────────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬───────────────────────────╯
                                             &mt LGUI TAB  &lt SYM ESC   &lt NAV SPACE     &lt FUN RET   &lt NUM BSPC  &mt RALT DEL
      //                                   ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    number {
      bindings = <
      //       ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &trans   &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &trans        &trans        &trans        &trans         &kp MINUS         &kp D         &kp RCTRL     &kp RGUI      &kp LALT      &kp RSHFT    &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &kp COLON     &trans        &kp GRAVE     &kp TILDE     &kp UNDER         &kp B         &trans        &trans        &trans        &cwl          &trans
      //       ╰─────────────┴─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬───────────────────────────╯
                                             &kp TAB       &kp ESC       &kp SPACE         &kp RET       &trans        &kp DEL
      //                                   ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };

    symbols {
      bindings = <
      //       ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &trans   &kp EXCL      &kp AT        &kp HASH       &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR      &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &kp LSHFT     &kp LALT      &kp LGUI      &kp LCTRL     &kp MINUS         &kp SLASH     &kp EQUAL     &kp BSLH      &kp LBKT      &kp RBKT      &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &trans        &trans        &kp GRAVE     &kp TILDE     &kp UNDER         &kp QMARK     &kp PLUS      &kp PIPE      &kp LBRC      &kp RBRC      &trans
      //       ╰─────────────┴─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬───────────────────────────╯
                                             &kp TAB       &trans        &kp SPACE         &kp RET       &kp BSPC      &kp DEL
      //                                   ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };

    function {
      bindings = <
      //       ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &trans   &kp F1       &kp F2         &kp F3        &kp F4        &kp F5            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &trans        &trans        &trans        &trans        &kp F11           &kp F12       &kp RCTRL     &kp RGUI      &kp LALT      &kp RSHFT     &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans        &trans        &trans        &trans        &trans        &trans
      //       ╰─────────────┴─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬───────────────────────────╯
                                             &kp TAB       &kp ESC       &kp SPACE         &trans        &kp BSPC      &kp DEL
      //                                   ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };

    navigation {
      bindings = <
      //       ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &trans   &tog QWE      &tog DVO      &trans        &trans        &trans            &trans        &trans        &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &kp LSHFT     &kp LALT      &kp LGUI      &kp LCTRL     &trans            &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans        &trans
      //       ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
        &trans   &trans        &trans        &kp C_PREV    &kp C_PP      &kp C_NEXT        &kp K_VOL_DN  &kp K_MUTE    &kp C_VOL_UP  &trans        &trans        &trans
      //       ╰─────────────┴─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬───────────────────────────╯
                                             &kp TAB       &kp ESC       &trans            &kp RET       &kp BSPC      &kp DEL
      //                                   ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
  };
};
